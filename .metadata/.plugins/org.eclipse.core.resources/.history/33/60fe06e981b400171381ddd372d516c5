package com.mycompany.myapp;
import com.codename1.ui.Form;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.Border;
import com.codename1.charts.util.ColorUtil;
import com.codename1.ui.Button;
import com.codename1.ui.Command;
import com.codename1.ui.Component;
import com.codename1.ui.Container;



public class Game extends Form {
	private GameWorld gw;
	private MapView mv; // new in A2
	private PointsView pv; // new in A2
	private Container commandPanel;
	private Toolbar myToolbar;



	public Game() {
		gw = new GameWorld(); // create “Observable”
		mv = new MapView(); // create an “Observer” for the map
		pv = new PointsView(gw); // create an “Observer” for the points
		gw.addObserver(mv); // register the map Observer
		gw.addObserver(pv); // register the points observer

		
		
		// code here to create menus, create Command objects for each command,
		// add commands to Command menu, create a control panel for the buttons,
		// add buttons to the control panel, add commands to the buttons, and
		// add control panel, MapView panel, and PointsView panel to the form
		
		
		setToolbar(myToolbar = new Toolbar());		
		
		
		this.setLayout(new BorderLayout());
		Container pointsContainer = new Container();
		add(BorderLayout.NORTH,pointsContainer);
		pointsContainer.getAllStyles().setPadding(Component.LEFT, 150);
		pointsContainer.getAllStyles().setBorder(Border.createLineBorder(4,ColorUtil.BLUE));
		pointsContainer.add(pv);

		
		commandPanel = new Container(new BoxLayout(BoxLayout.Y_AXIS));
		add(BorderLayout.WEST,commandPanel);
		commandPanel.getAllStyles().setBorder(Border.createLineBorder(4,ColorUtil.LTGRAY));
		
		
		Container mapContainer = new Container();
		add(BorderLayout.CENTER,mapContainer);
		mapContainer.add(mv);
		mapContainer.getAllStyles().setBorder(Border.createLineBorder(4,ColorUtil.LTGRAY));

		
		
		CommandAddAsteroid addAsteroid = new CommandAddAsteroid("Add Asteroid", gw);
		CommandAddStation addStation = new CommandAddStation("Add Station", gw);
		CommandAddShip addShip = new CommandAddShip("Add Ship", gw);
		CommandIncrease inc = new CommandIncrease("Increase", gw);
		CommandDecrease dec = new CommandDecrease("Decrease", gw);
		CommandLeft left = new CommandLeft("Left", gw);
		CommandRight right= new CommandRight("Right", gw);
		CommandFire fire = new CommandFire("Fire", gw);
		CommandJump jump = new CommandJump("Jump", gw);
		CommandLoadMissiles resupply = new CommandLoadMissiles("Load Missiles", gw);
		CommandKillAsteroid kill = new CommandKillAsteroid("Kill Asteroid", gw);
		CommandCrashShip cs = new CommandCrashShip("Crash Ship", gw);
		CommandExterminate ex = new CommandExterminate("Exterminate", gw);
		CommandTick tick = new CommandTick("Tick", gw);
		CommandQuit quit = new CommandQuit("Quit", gw);
		
		
		
		addToMenus(addAsteroid);
		addToMenus(addStation);
		addToMenus(addShip);
		addToMenus(inc);
		addToMenus(dec);
		addToMenus(left);
		addToMenus(right);
		addToMenus(fire);
		addToMenus(jump);
		addToMenus(resupply);
		addToMenus(kill);
		addToMenus(cs);
		addToMenus(ex);
		addToMenus(tick);
		addToMenus(quit);
		
		this.show();
	}
	
	private void addToMenus(Command c) {
		commandPanel.add(new Button(c));
		myToolbar.addCommandToSideMenu(c);
	}
}
